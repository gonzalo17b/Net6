// <auto-generated />
using System;
using BusBookingApi.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BusBookingApi.Infrastructure.Migrations
{
    [DbContext(typeof(BusBookingApiDbContext))]
    [Migration("20221011223112_CreateRoutesTables")]
    partial class CreateRoutesTables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BusBookingApi.Clientes.Domain.Cliente", b =>
                {
                    b.Property<string>("Dni")
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)")
                        .HasColumnName("Id");

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Foto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Dni");

                    b.ToTable("Clientes", (string)null);
                });

            modelBuilder.Entity("BusBookingApi.Rutas.Domain.Asiento", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<int>("ViajeId")
                        .HasColumnType("int");

                    b.Property<string>("Espacio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Situacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id", "ViajeId");

                    b.HasIndex("ViajeId");

                    b.ToTable("Asientos", (string)null);
                });

            modelBuilder.Entity("BusBookingApi.Rutas.Domain.Ruta", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Destino")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Origen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Rutas", (string)null);
                });

            modelBuilder.Entity("BusBookingApi.Rutas.Domain.Viaje", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Llegada")
                        .HasColumnType("datetime2");

                    b.Property<string>("RutaId")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("Salida")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RutaId");

                    b.ToTable("Viajes", (string)null);
                });

            modelBuilder.Entity("BusBookingApi.Rutas.Domain.Asiento", b =>
                {
                    b.HasOne("BusBookingApi.Rutas.Domain.Viaje", null)
                        .WithMany("Asientos")
                        .HasForeignKey("ViajeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BusBookingApi.Rutas.Domain.Viaje", b =>
                {
                    b.HasOne("BusBookingApi.Rutas.Domain.Ruta", null)
                        .WithMany("Viajes")
                        .HasForeignKey("RutaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BusBookingApi.Rutas.Domain.Ruta", b =>
                {
                    b.Navigation("Viajes");
                });

            modelBuilder.Entity("BusBookingApi.Rutas.Domain.Viaje", b =>
                {
                    b.Navigation("Asientos");
                });
#pragma warning restore 612, 618
        }
    }
}
